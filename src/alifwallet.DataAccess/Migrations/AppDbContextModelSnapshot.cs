// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using alifwallet.DataAccess.DbContexts;

#nullable disable

namespace alifwallet.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("alifwallet.Domain.Entity.Recharge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("WalletId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Recharges");
                });

            modelBuilder.Entity("alifwallet.Domain.Entity.Wallet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Balance = 75000.0,
                            IsVerified = true,
                            SecretKey = ""
                        },
                        new
                        {
                            Id = 2L,
                            Balance = 8000.0,
                            IsVerified = false,
                            SecretKey = ""
                        },
                        new
                        {
                            Id = 3L,
                            Balance = 80000.0,
                            IsVerified = true,
                            SecretKey = ""
                        },
                        new
                        {
                            Id = 4L,
                            Balance = 10000.0,
                            IsVerified = false,
                            SecretKey = ""
                        },
                        new
                        {
                            Id = 5L,
                            Balance = 50000.0,
                            IsVerified = true,
                            SecretKey = ""
                        },
                        new
                        {
                            Id = 6L,
                            Balance = 10000.0,
                            IsVerified = false,
                            SecretKey = ""
                        });
                });

            modelBuilder.Entity("alifwallet.Domain.Entity.Recharge", b =>
                {
                    b.HasOne("alifwallet.Domain.Entity.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });
#pragma warning restore 612, 618
        }
    }
}
